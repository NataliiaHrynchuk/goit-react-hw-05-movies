{"version":3,"file":"static/js/304.dc2ea0cf.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/NoResults/NoResults.styled.js","components/NoResults/NoResults.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Box = styled.ul`\nwidth: 100%;\ndisplay: flex;\nflex-direction: column;\ngap: 12px;\npadding: 0;\njustify-content: center;\n    @media screen and (min-width: 768px){\n        max-width: 768px;\n        flex-direction: row;\n        flex-wrap: wrap;\n        gap: 60px;\n    }\n    @media screen and (min-width: 1200px) {\n        max-width: 1020px;\n    }\n`;\n\nexport const MovieItem = styled.li`\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    width: 100%;\n    margin-bottom: 12px;\n    background: rgb(255, 255, 255);\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n    border-radius: 5px;\n    text-decoration: none;\n    text-align: center;\n    transition-duration: 300ms;\n    &:hover {\n        cursor: pointer;\n        transform: scale(1.03);\n        box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n    }\n    @media screen and (min-width: 768px) {\n        margin-bottom: 0;\n        width: 300px;\n    }\n`;\n\nexport const StyledLink = styled(NavLink)`\n    border-radius: 4px;\n    text-decoration: none;\n    color: #C71585;\n    font-weight: 500;\n`;\n\nexport const Poster = styled.img`\n    padding: 0px;\n    margin: 0px; \n    width: 100%;\n    display: block;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n`;\n\nexport const MiddleTitle = styled.h3`\n    padding: 12px 4px;\n    @media screen and (min-width: 1200px) {\n        font-size: 24px;\n    }\n`;","import { useLocation } from 'react-router-dom';\nimport { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as SC from './MovieList.styled';\nimport noResults from 'components/images/clipart2883707.png';\n\nexport const MovieList = ({ movies }) => {\n    const [baseUrl] = useState('https://image.tmdb.org/t/p/w500');\n    const location = useLocation();\n    \n    return (\n        <SC.Box>\n            {movies.map(({ id, title, name, poster_path}) =>\n                <SC.MovieItem key = {id}>\n            <SC.StyledLink to={`/movies/${id}`} state={{from:location}}>\n                <SC.Poster \n                src={\n                    poster_path ? baseUrl + poster_path : noResults\n                    } \n                    alt={title || name}/>\n                <SC.MiddleTitle>{title || name}</SC.MiddleTitle>\n            </SC.StyledLink>\n        </SC.MovieItem>)\n}\n                \n        </SC.Box>\n    )\n};\n\nMovieList.propTypes = {\n    movies: PropTypes.array.isRequired,\n}","import styled from \"styled-components\";\n\nexport const NoResults = styled.img`\nwidth: 300px;\nmargin-top: 10px;\nmargin-left: auto;\nmargin-right: auto;\n`; ","import * as SC from './NoResults.styled';\nimport PropTypes from 'prop-types';\n\nexport const NoResults = ({imageUrl}) => {\n    return (\n        <SC.NoResults src={imageUrl} alt='no results'/>\n    )\n}\n\nNoResults.propTypes = {\n    imageUrl: PropTypes.string.isRequired,\n};","import styled from \"styled-components\";\n\nexport const Title = styled.h1`\ntext-align: center;\ncolor: #C71585;\n`;","import React, { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { NoResults } from 'components/NoResults/NoResults';\nimport noResults from 'components/images/clipart2883707.png';\nimport * as API from 'services/api';\nimport * as SC from './Home.styled';\n\nconst Home = () => {\n    const [isLoadingMovies, setIsLoadingMovies] = useState(false);\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    const location = useLocation();\n    \n    useEffect(() => {\n        const fetchTradingMovies = async () => {\n            try {\n                setIsLoadingMovies(true);\n                const movies = await API.getTradingMovies();\n                setMovies(movies);\n            } catch (error) {\n                setError(error.message);\n            } finally {\n                setIsLoadingMovies(false);\n            }\n        };\n        fetchTradingMovies();\n    }, []);\n\n    return (\n        <main>\n            <SC.Title>Trending today</SC.Title>\n            {error && (\n                <>\n                    <NoResults imageUrl={noResults} location={location} />\n                    <p>{error}</p>\n                </>\n            )\n                }\n            {isLoadingMovies && <p>Loading...</p>}\n            {movies && !isLoadingMovies &&\n                <MovieList movies={movies} location={location}/>\n            }\n        </main>\n    )\n};\n\nexport default Home;","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: '6860d409037e6854532ae07af7af1d83',\n    include_adult: false,\n};\n\nexport const getTradingMovies = async() => {\n    const response = await axios.get(`/trending/all/day?`);\n    return response.data.results;\n};\n\nexport const getMoviesByName = async query => {\n        const response = await axios.get(`/search/movie?query=${query}`);\n        return response.data.results;\n};\n\nexport const getMovieById = async movieId => {\n    const response = await axios.get(`/movie/${movieId}?`);\n    return response.data;\n};\n\nexport const getCast = movieId => {\n    try {\n        return axios\n        .get(`/movie/${movieId}/credits?`)\n        .then(({data: {cast}}) => cast)\n    } catch (error) {\n            console.log('error', {error});\n        }\n};\n\n\n\nexport const getReviews = movieId => {\n    try {\n        return axios\n        .get(`/movie/${movieId}/reviews?`)\n        .then (({data: {results}}) => results)\n    } catch (error) {\n        console.log('error', {error});\n    };\n};\n\n\n\n\n"],"names":["Box","styled","MovieItem","StyledLink","NavLink","Poster","MiddleTitle","MovieList","movies","useState","baseUrl","location","useLocation","map","id","title","name","poster_path","to","state","from","src","noResults","alt","NoResults","imageUrl","Title","isLoadingMovies","setIsLoadingMovies","setMovies","error","setError","useEffect","fetchTradingMovies","API","message","axios","api_key","include_adult","getTradingMovies","response","data","results","getMoviesByName","query","getMovieById","movieId","getCast","then","cast","console","log","getReviews"],"sourceRoot":""}