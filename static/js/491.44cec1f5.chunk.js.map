{"version":3,"file":"static/js/491.44cec1f5.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const BackLink = styled(Link)`\nwidth: 100px;\nmargin-left: auto;\nmargin-right: auto;\npadding: 4px;\ndisplay: inline-flex;\nalign-items: center;\ngap: 4px;\ntext-decoration: none;\nborder: 1px solid black;\nborder-radius: 4px;\ncolor: black;\nbackground-color: #dec1e3;\n\n:hover, :focus {\n    color: white;\n    background-color:#c71585;\n}\n\n@media screen and (min-width: 1200px) {\n    margin-left: 16px;\n}\n`;","import { AiOutlineArrowLeft } from 'react-icons/ai';\nimport * as SC from './BackLink.styled';\n\nexport const BackLink = ({to, children}) => {\n    \n    return (\n        <SC.BackLink  to={to} >\n            <AiOutlineArrowLeft />\n            {children}\n        </SC.BackLink>\n    );\n};","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Box = styled.div`\n    display: flex;\n    flex-direction: column; \n    gap: 12px;\n    padding: 16px;\n    border-bottom: solid 1px grey;\n    box-shadow: 0px 3px 3px -3px rgba(0,0,0,0.55);\n    @media screen and (min-width: 1200px) {\n        max-width: 1200px;\n    }\n`;\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column; \n    gap: 12px;\n    padding: 12px 0;\n    border-bottom: solid 1px grey;\n    box-shadow: 0px 3px 3px -3px rgba(0,0,0,0.55);\n    @media screen and (min-width: 768px) {\n        max-width: 768px;\n        flex-direction: row;\n        gap: 12px;\n    }\n    @media screen and (min-width: 1200px) {\n        max-width: 1020px;\n    }\n`;\n\nexport const Poster = styled.img`\nwidth: 100%;\nmax-width: 400px;\nmargin-left: auto;\nmargin-right: auto;\n`;\n\nexport const Wrap = styled.div`\n    display: flex;\n    flex-direction: column; \n    align-items: center;\n    border-bottom: gray;\n    gap: 12px;\n    @media screen and (min-width: 768px) {\n        align-items: flex-start;\n    }\n\n    @media screen and (min-width: 1200px) {\n        padding: 16px;\n    }\n`;\nexport const BigTitle = styled.h2`\n    @media screen and (min-width: 1200px) {\n        font-size: 30px;\n    }\n`;\n\nexport const MiddleTitle = styled.h3`\n    @media screen and (min-width: 1200px) {\n        font-size: 24px;\n    }\n`;\n\nexport const SmallTitle = styled.h4`\n    @media screen and (min-width: 1200px) {\n        font-size: 20px;\n    }\n`;\n\nexport const Text = styled.p`\n    @media screen and (min-width: 768px) {\n        font-size: 20px;\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: 24px;\n    }\n`;\n\nexport const Link = styled(NavLink)`\n    padding: 8px 16px;\n    border-radius: 4px;\n    text-decoration: none;\n    color: black;\n    font-weight: 500;\n\n    &.active {\n    color: #C71585;\n    }\n\n    :hover {\n        text-decoration: underline;\n    }\n\n    @media screen and (min-width: 1200px) {\n        font-size: 24px;\n    }\n`;\n\nexport const DetailsList = styled.ul`\n    display: flex;\n    flex-direction: column; \n    gap: 20px;\n    list-style: none;\n    padding: 0;\n    text-align: center;\n\n    @media screen and (min-width: 768px) {\n        text-align: left;\n    }\n`;\n","import { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { BackLink } from '../../components/BackLink/BackLink';\nimport { Suspense } from 'react';\nimport * as API from '../../services/api';\nimport * as SC from './MovieDetails.styled';\n\n\nconst dafaultURL = 'https://i.ibb.co/BrYLsTv/default-movie-poster-min.jpg';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w200';\n\nexport default function MovieDetails() { \n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n    const backLinkHref = location?.state?.from ?? \"/movies\";\n\n    const { \n        poster_path: poster, \n        title, \n        name, \n        release_date: releaseYear, \n        vote_average: userScore,\n        overview, \n        genres \n    } = movie ?? {};\n    \n\n    useEffect(() => {\n        if (!movieId) {\n            return;\n        }\n        API\n            .getMovieById(movieId)\n            .then(setMovie)\n    }, [movieId]);\n    \n    return (\n        <div>\n            \n        {movie &&\n                <SC.Box>\n                <BackLink to={backLinkHref}>Go back</BackLink>\n                    <SC.Container>\n                        {poster ? (\n                        <SC.Poster src={IMG_URL + poster}\n                            alt='movie cover' />\n                        ) : (\n                            <SC.Poster src = {dafaultURL}\n                            alt='movie cover' width=\"200px\" />    \n                        )}\n                    \n                        <SC.Wrap>\n                            <SC.BigTitle>{title || name}({new Date(releaseYear).getFullYear()})</SC.BigTitle>\n                            <SC.Text>User Score: {Math.round(userScore * 10)}%</SC.Text>\n                            <SC.MiddleTitle>Overview</SC.MiddleTitle>\n                            <SC.Text>{overview}</SC.Text>\n                            <SC.SmallTitle>Genres</SC.SmallTitle>\n                            <SC.Text>{genres.map(genre => genre.name).join(', ')}</SC.Text>\n                        </SC.Wrap>\n                    </SC.Container>\n                    <SC.Wrap>\n                        <SC.Text>Additional information</SC.Text>\n                        <SC.DetailsList>\n                            <li>\n                                <SC.Link to=\"cast\" state={{from: location}}>Cast</SC.Link>\n                            </li>\n                            <li>\n                                <SC.Link to=\"reviews\" state={{from: location}}>Reviews</SC.Link>\n                            </li>\n                        </SC.DetailsList>\n                        <Suspense fallback={<div>Loading...</div>}>\n                            <Outlet/>\n                        </Suspense>\n                    </SC.Wrap>\n                </SC.Box>\n        }\n    </div>\n    )\n};\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: '6860d409037e6854532ae07af7af1d83',\n    include_adult: false,\n};\n\nexport const getTradingMovies = () => {\n    try {\n        return axios\n        .get(`/trending/all/day?`)\n        .then(({data: {results}}) => \n        results)\n    } catch (error) {\n        console.log('error', {error});\n        return null;\n    };\n};\n\nexport const getMoviesByName = query => {\n    try{\n        return axios\n        .get(`/search/movie?query=${query}`)\n        .then(({data: {results}}) => \n        results)\n    } catch (error) {\n        console.log('error', {error});\n        return null;\n    };\n};\n\nexport const getMovieById = movieId => {\n    try {\n        return axios\n        .get(`/movie/${movieId}?`)\n        .then(({data}) => data)\n    } catch (error) {\n        console.log('error', {error});\n        return null;\n    };\n};\n\n\nexport const getCast = movieId => {\n    try {\n        return axios\n        .get(`/movie/${movieId}/credits?`)\n        .then(({data: {cast}}) => cast)\n    } catch (error) {\n            console.log('error', {error});\n        }\n};\n\nexport const getReviews = movieId => {\n    try {\n        return axios\n        .get(`/movie/${movieId}/reviews?`)\n        .then (({data: {results}}) => results)\n    } catch (error) {\n        console.log('error', {error});\n    };\n};\n\n\n\n\n"],"names":["BackLink","styled","Link","to","children","Box","Container","Poster","Wrap","BigTitle","MiddleTitle","SmallTitle","Text","NavLink","DetailsList","MovieDetails","movieId","useParams","useState","movie","setMovie","location","useLocation","backLinkHref","state","from","poster","poster_path","title","name","releaseYear","release_date","userScore","vote_average","overview","genres","useEffect","API","then","src","alt","width","Date","getFullYear","Math","round","map","genre","join","Suspense","fallback","axios","api_key","include_adult","getTradingMovies","data","results","error","console","log","getMoviesByName","query","getMovieById","getCast","cast","getReviews"],"sourceRoot":""}