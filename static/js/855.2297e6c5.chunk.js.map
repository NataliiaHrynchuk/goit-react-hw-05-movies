{"version":3,"file":"static/js/855.2297e6c5.chunk.js","mappings":"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","sources":["components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.style.js","components/SearchForm/SearchForm.jsx","components/NoResults/NoResults.styled.js","components/NoResults/NoResults.jsx","pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Box = styled.ul`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n    margin-left: auto;\n    margin-right: auto;\n    min-width: 800px;\n    max-width: 1200px;\n    gap: 12px;\n    padding: 0;\n`;\n\nexport const MovieItem = styled.li`\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    width: 100%;\n    max-width: 200px;\n    height: 320 px;\n    background: rgb(255, 255, 255);\n    box-shadow: 0px 2px 4px -1px rgb(0 0 0 / 20%),\n    0px 4px 5px 0px rgb(0 0 0 / 14%), 0px 1px 10px 0px rgb(0 0 0 / 12%);\n    border-radius: 5px;\n    text-decoration: none;\n    text-align: center;\n    transition-duration: 300ms;\n    &:hover {\n        cursor: pointer;\n        transform: scale(1.03);\n        box-shadow: rgb(0 0 0 / 8%) 0px 10px 25px;\n    }\n`\n\nexport const StyledLink = styled(NavLink)`\n    border-radius: 4px;\n    text-decoration: none;\n    color: #C71585;\n    font-weight: 500;\n`;\n\nexport const Poster = styled.img`\n    padding: 0px;\n    margin: 0px; \n    width: 100%;\n    display: block;\n    border-top-left-radius: 5px;\n    border-top-right-radius: 5px;\n`;","import { useLocation } from 'react-router-dom';\nimport * as SC from './MovieList.styled';\n\nexport const MovieList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <SC.Box>\n            {movies.map(({ id, title, name, poster}) =>\n                <SC.MovieItem key = {id}>\n            <SC.StyledLink to={`/movies/${id}`} state={{from:location}}>\n                <SC.Poster src={poster} alt={title || name}/>\n                <h3>{title || name}</h3>\n            </SC.StyledLink>\n        </SC.MovieItem>)\n}\n                \n        </SC.Box>\n    )\n}","import styled from \"styled-components\";\n\nexport const SearchForm = styled.form`\n    display: flex;\n    margin-left: auto;\n    margin-right: auto;\n    align-items: center;\n    width: 400px;\n    height: 32px;\n    max-width: 600px;\n    background-color: #fff;\n    border: solid 1px #c71585;\n    border-radius: 4px;\n    overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n    display: inline-block;\n    height: 100%;\n    padding: 4px;\n    opacity: 0.8;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    border: none;\n    border-top-right-radius: 4px;\n    border-bottom-right-radius: 4px;\n    color: black;\n    background-color: #dec1e3;\n    :hover, :focus {\n        color: white;\n        background-color:#c71585;\n        border: solid 1px #c71585;\n        opacity: 1;\n    }\n`;\n\nexport const SearchFormInput = styled.input`\nbox-sizing: border-box;\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    font: inherit;\n    font-size: 16px;\n    vertical-align: middle;\n    border: none;\n    outline: none;\n    padding: 4px;\n    \n    ::placeholder {\n        font: inherit;\n        font-size: 18px;\n}\n`;","import React from \"react\";\nimport * as SC from './SearchForm.style';\n\nexport default function SearchForm({ onSubmit }) {            \n    const handleSubmit = event => {\n        event.preventDefault();\n        \n        if (!event.currentTarget.elements.query.value) {\n            alert('Enter movies name');\n        return;\n        }\n        onSubmit(event.currentTarget.elements.query.value);\n        event.currentTarget.reset();\n    };\n\n    return (\n        <SC.SearchForm onSubmit={handleSubmit}>\n            <SC.SearchFormInput\n                type=\"text\"\n                name=\"query\"\n                autoFocus\n                utocomplete=\"off\"\n            />\n            <SC.SearchFormBtn type=\"submit\">\n                Search\n            </SC.SearchFormBtn>\n    </SC.SearchForm>\n    )\n};\n","import styled from \"styled-components\";\n\nexport const NoResults = styled.img`\nwidth: 300px;\nmargin-top: 10px;\nmargin-left: auto;\nmargin-right: auto;\n`; ","import * as SC from './NoResults.styled';\n\nexport const NoResults = ({children}) => {\n    return (\n        <SC.NoResults src={children} alt='no results'/>\n    )\n}","import styled from \"styled-components\";\n\nexport const Section = styled.main`\npadding-top: 16px;\n`;","import SearchForm from '../../components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { MovieList } from 'components/MovieList/MovieList';\nimport { useSearchParams } from 'react-router-dom';\nimport { NoResults } from 'components/NoResults/NoResults';\nimport noResults from 'components/images/clipart2883707.png';\nimport * as SC from './Movies.styled';\nimport * as API from '../../services/api';\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w200';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState(null);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? \"\";\n    \n    const handleFormSubmit = name => { \n        setSearchParams(name !== \"\" ? { query: name } : {});        \n    };\n\n    useEffect(() => {\n        if (!query) {\n            return;\n        }\n        API\n            .getMoviesByName(query)\n            .then((results) => setMovies(results.map(\n                    ({ id,\n                        title,\n                        name,\n                        poster_path: poster,\n                    }) => {\n                        return {\n                            id,\n                            title,\n                            name,\n                            poster: IMG_URL + poster,\n                        };}\n                    \n                )));\n    }, [query]);\n\n    return (\n        <SC.Section>\n            <SearchForm onSubmit={handleFormSubmit} />\n            {movies &&  ((movies.length > 0) ? (\n                <MovieList movies={movies}/>\n            ) : (\n                <NoResults children={noResults}/>\n            ))\n            }\n        </SC.Section>\n    )\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: '6860d409037e6854532ae07af7af1d83',\n    include_adult: false,\n};\n\nconst IMG_URL = 'https://image.tmdb.org/t/p/w200';\n\nexport const getTradingMovies = () => {\n    return axios.get(`/trending/all/day?`)\n    .then(({data: {results}}) => \n    results)\n    . catch (error => {\n       console.log(error.message);\n    });\n};\n\nexport const getMoviesByName = query => {\n    return axios\n    .get(`/search/movie?query=${query}`)\n    .then(({data: {results}}) => \n    results)\n    . catch (error => {\n       console.log(error.message);\n    });\n};\n\nexport const getMovieById = movieId => {\n    return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n        ({\n            data:{\n                id, \n                poster_path: poster,\n                title,\n                name,\n                release_date: releaseYear,\n                vote_average: userScore,\n                overview,\n                genres,\n            },\n        }) => ({\n            id,\n            poster: IMG_URL + poster,\n            title,\n            name,\n            releaseYear: new Date(releaseYear).getFullYear(),\n            userScore: Math.round(userScore * 10),\n            overview,\n            genres,\n        })\n    )\n    .catch (error => {\n        console.log(error.message);\n    });\n};\n\nexport const getCast = movieId => {\n    return axios\n        .get(`/movie/${movieId}/credits?`)\n        .then(({data: {cast}}) =>\n        cast\n        )\n        .catch (error => {\n            console.log(error.message);\n        })\n};\n\nexport const getReviews = movieId => {\n    return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then (({data: {results}}) => \n    results\n    )   \n    .catch (error => {\n        console.log(error.message);\n    });\n};\n\n\n\n\n"],"names":["Box","styled","MovieItem","StyledLink","NavLink","Poster","MovieList","movies","location","useLocation","map","id","title","name","poster","to","state","from","src","alt","SearchForm","SearchFormBtn","SearchFormInput","onSubmit","event","preventDefault","currentTarget","elements","query","value","reset","alert","type","autoFocus","utocomplete","NoResults","children","Section","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","useEffect","API","then","results","poster_path","length","noResults","axios","api_key","include_adult","getTradingMovies","data","catch","error","console","log","message","getMoviesByName","getMovieById","movieId","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","getCast","cast","getReviews"],"sourceRoot":""}