{"version":3,"file":"static/js/425.7bf70503.chunk.js","mappings":"0MAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,qQ,SCDVE,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACxB,OACI,wBACKA,EAAOC,KAAI,SAACC,GAAD,OACR,yBACJ,SAACN,EAAD,CAAYO,GAAE,UAAKD,EAAME,IAAzB,SACKF,EAAMG,OAASH,EAAMI,QAFXJ,EAAME,GADT,KAUvB,C,6HCbYG,EAAaV,EAAAA,GAAAA,KAAH,oNAWVW,EAAgBX,EAAAA,GAAAA,OAAH,ubAmBbY,EAAkBZ,EAAAA,GAAAA,MAAH,2W,SCzBb,SAASU,EAAT,GAAmC,IAAbG,EAAY,EAAZA,SACjC,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAgBA,OACI,UAAC,EAAD,CAAeH,SAXE,SAAAI,GACrBA,EAAMC,iBACQ,MAAVH,GAIJF,EAASE,GACTC,EAAS,MAJLG,MAAM,oBAKT,EAGG,WACI,SAAC,EAAD,CACIC,KAAK,OACLX,KAAK,aACLY,MAAON,EACPO,SApBa,SAAAL,GACzBD,EAASC,EAAMM,cAAcF,MAAMG,cAClC,EAmBWC,WAAS,EACTC,YAAY,MACZC,YAAY,MAEhB,SAAC,EAAD,CAAkBP,KAAK,SAAvB,sBAKX,C,wBCQD,EA3Ce,WACX,OAAkCN,EAAAA,EAAAA,UAAS,IAA3C,eAAOc,EAAP,KAAkBC,EAAlB,KACA,GAA4Bf,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAe2B,EAAf,KA+BA,OAvBAC,EAAAA,EAAAA,YAAU,WACDH,GAGLI,EAAAA,GACqBJ,GAChBK,MAAK,SAACC,GACH,IAAMC,EAAiBD,EAAKE,QAAQhC,KAChC,YAII,MAAO,CACHG,GAFF,EAHHA,GAMKC,MAHF,EAFFA,MAMIC,KAJF,EADFA,KAOH,IAEL4B,QAAQC,IAAIH,GACZL,GAAU,SAAAS,GAAU,wBAAQA,IAAR,OAAuBJ,GAAvB,GACvB,GACR,GAAE,CAACP,KAEA,6BACI,SAAC,EAAD,CAAYf,SA/BK,SAAAE,GACrBc,EAAad,GACbe,EAAU,GAEb,IA4BQ3B,IACG,SAACD,EAAA,EAAD,CAAWC,OAAQA,MAIlC,C,4JC7CKqC,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEwBC,IAAAA,IAAA,UAAaF,EAAb,qCAAkDD,IAF1E,cAEOI,EAFP,yBAGQA,EAASV,MAHjB,gCAKH,IAAIW,MAAM,qBALP,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+B/B,GAA/B,gFACGgC,EAAe,IAAIC,gBAAgB,CACrCC,QAAST,EACTU,SAAU,QACVC,KAAM,EACNC,eAAe,EACfrC,MAAAA,IAND,kBASwB4B,IAAAA,IAAA,UAAaF,EAAb,yBAAsCM,IAT9D,cASOH,EATP,yBAUQA,EAASV,MAVjB,gCAYC,IAAIW,MAAJ,sCAAyC9B,IAZ1C,gFAgBA,SAAesC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEwBX,IAAAA,IAAA,UAAaF,EAAb,kBAA+Ba,EAA/B,oBAAkDd,EAAlD,oBAFxB,cAEOI,EAFP,yBAGQA,EAASV,MAHjB,gCAKC,IAAIW,MAAJ,qBALD,gF","sources":["pages/Home.styled.js","components/MovieList.jsx","components/SearchForm/SearchForm.style.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n    padding: 8px 16px;\n    border-radius: 4px;\n    /* text-decoration: none; */\n    color: black;\n    font-weight: 500;\n\n    /* &.active {\n    color: #C71585;\n    } */\n\n    :hover {\n        text-decoration: underline;\n    }\n`;","import { StyledLink } from '../pages/Home.styled';\n\nexport const MovieList = ({ movies }) => {\n    return (\n        <ul>\n            {movies.map((movie) =>\n                <li key = {movie.id}>\n            <StyledLink to={`${movie.id}`}>\n                {movie.title || movie.name}\n            </StyledLink>\n        </li>)\n}\n                \n        </ul>\n    )\n}","import styled from \"styled-components\";\n\nexport const SearchForm = styled.form`\n    display: flex;\n    margin-left: 10px;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n    display: inline-block;\n    height: 31px;\n    padding: 4px;\n    opacity: 0.8;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    border: solid 1px #b7b2b2;\n    color: black;\n    background-color: #c6bacb;\n    :hover, :focus {\n        color: white;\n        background-color:#c71585;\n        border: solid 1px #c71585;\n        opacity: 1;\n    }\n`;\n\nexport const SearchFormInput = styled.input`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: solid 1px #b7b2b2;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n    :focus {\n        border: solid 1px #139cd1;\n    }\n    ::placeholder {\n        font: inherit;\n        font-size: 18px;\n}\n`;","import React from \"react\";\nimport { useState } from \"react\";\nimport * as SC from './SearchForm.style';\n\n\n\n\nexport default function SearchForm({ onSubmit }) {\n    const [query, setQuery] = useState('');\n                \n    const handleNameChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n    };\n        \n    const handleSubmit = event => {\n    event.preventDefault();\n    if (query === ' ') {\n        alert('Enter movies name');\n        return;\n    }\n    onSubmit(query);\n    setQuery(' ');\n    };\n\n    return (\n        <SC.SearchForm onSubmit={handleSubmit}>\n            <SC.SearchFormInput\n                type=\"text\"\n                name=\"imagesName\"\n                value={query}\n                onChange={handleNameChange}\n                autoFocus\n                utocomplete=\"off\"\n                placeholder=\"\"\n            />\n            <SC.SearchFormBtn type=\"submit\">\n                Search\n            </SC.SearchFormBtn>\n    </SC.SearchForm>\n    )\n};\n","import SearchForm from '../components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { MovieList } from 'components/MovieList';\nimport * as API from '../services/api';\n\nconst Movies = () => {\n    const [movieName, setMovieName] = useState('');\n    const [movies, setMovies] = useState([]);\n    \n    const handleFormSubmit = query => { \n        setMovieName(query);\n        setMovies([]);\n        \n    };\n\n    useEffect(() => {\n        if (!movieName) {\n            return;\n        }\n        API\n            .getMoviesByName(movieName)\n            .then((data) => {\n                const receivedMovies = data.results.map(\n                    ({ id,\n                        title,\n                        name,\n                    }) => {\n                        return {\n                            id,\n                            title,\n                            name,\n                        };\n                    }\n                );\n                console.log(receivedMovies);\n                setMovies(prevMovies => [...prevMovies, ...receivedMovies]);\n            })\n    }, [movieName]);\n    return (\n        <main>\n            <SearchForm onSubmit={handleFormSubmit} />\n            {movies &&\n                <MovieList movies={movies}/>       \n            }\n        </main>\n    )\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = '6860d409037e6854532ae07af7af1d83';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTradingMovies() {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n        return response.data;\n    } catch(error) {\n    new Error('There is no movie');\n}\n};\n\nexport async function getMoviesByName(query) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n        query,\n    });\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie?${searchParams}`);\n        return response.data;\n    } catch (error) {\n        new Error(`There is no movie with name ${query}`);\n    }\n};\n\nexport async function getMovieById(movieId) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        new Error(`There is no movie`);\n    }\n}\n\n"],"names":["StyledLink","styled","NavLink","MovieList","movies","map","movie","to","id","title","name","SearchForm","SearchFormBtn","SearchFormInput","onSubmit","useState","query","setQuery","event","preventDefault","alert","type","value","onChange","currentTarget","toLowerCase","autoFocus","utocomplete","placeholder","movieName","setMovieName","setMovies","useEffect","API","then","data","receivedMovies","results","console","log","prevMovies","API_KEY","BASE_URL","getTradingMovies","axios","response","Error","getMoviesByName","searchParams","URLSearchParams","api_key","language","page","include_adult","getMovieById","movieId"],"sourceRoot":""}