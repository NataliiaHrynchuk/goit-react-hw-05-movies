{"version":3,"file":"static/js/415.3c1ffb4e.chunk.js","mappings":"0MAGaA,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,qQ,mBCAVE,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClBC,GAAWC,EAAAA,EAAAA,MACjB,OACI,wBACKF,EAAOG,KAAI,SAACC,GAAD,OACR,yBACJ,SAACR,EAAD,CAAYS,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAACC,KAAKP,GAApD,SACKG,EAAMK,OAASL,EAAMM,QAFXN,EAAME,GADT,KAUvB,C,4FCyBD,UArCa,WACT,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOX,EAAP,KAAeY,EAAf,KAyBA,OAvBAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,KAEKC,MAAK,SAACC,GACH,IAAMC,EAAiBD,EAAKE,QAAQf,KAChC,YAII,MAAO,CACHG,GAFF,EAHHA,GAMKG,MAHF,EAFFA,MAMIC,KAJF,EADFA,KAOH,IAELS,QAAQC,IAAIJ,EAAKE,QAAQf,KAAI,SAAAkB,GAAM,OAAIA,CAAJ,KAEnCT,GAAU,SAAAU,GAAU,wBAAQA,IAAR,OAAuBL,GAAvB,GACvB,GAER,GAAE,KAGC,6BACI,2CACCjB,IACG,SAAC,IAAD,CAAWA,OAAQA,MAKlC,C,oLCvCKuB,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEwBC,IAAAA,IAAA,UAAaF,EAAb,qCAAkDD,IAF1E,cAEOI,EAFP,yBAGQA,EAASX,MAHjB,gCAKH,IAAIY,MAAM,qBALP,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gFACGC,EAAe,IAAIC,gBAAgB,CACrCC,QAASV,EACTW,SAAU,QACVC,KAAM,EACNC,eAAe,EACfN,MAAAA,IAND,kBASwBJ,IAAAA,IAAA,UAAaF,EAAb,yBAAsCO,IAT9D,cASOJ,EATP,yBAUQA,EAASX,MAVjB,gCAYC,IAAIY,MAAJ,sCAAyCE,IAZ1C,gFAgBA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,gGAEwBZ,IAAAA,IAAA,UAAaF,EAAb,kBAA+Bc,EAA/B,oBAAkDf,EAAlD,oBAFxB,cAEOI,EAFP,yBAGQA,EAASX,MAHjB,gCAKC,IAAIY,MAAJ,qBALD,gFASA,SAAeW,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,gGAEwBZ,IAAAA,IAAA,UAAaF,EAAb,kBAA+Bc,EAA/B,4BAA0Df,EAA1D,oBAFxB,cAEOI,EAFP,yBAGQA,EAASX,MAHjB,gCAKC,IAAIY,MAAJ,qBALD,gF","sources":["pages/Home.styled.js","components/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n    padding: 8px 16px;\n    border-radius: 4px;\n    /* text-decoration: none; */\n    color: black;\n    font-weight: 500;\n\n    /* &.active {\n    color: #C71585;\n    } */\n\n    :hover {\n        text-decoration: underline;\n    }\n`;","import { StyledLink } from '../pages/Home.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <ul>\n            {movies.map((movie) =>\n                <li key = {movie.id}>\n            <StyledLink to={`/movies/${movie.id}`} state={{from:location}}>\n                {movie.title || movie.name}\n            </StyledLink>\n        </li>)\n}\n                \n        </ul>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { MovieList } from 'components/MovieList';\nimport * as API from 'services/api';\n\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    \n    useEffect(() => {\n        API\n            .getTradingMovies()\n            .then((data) => {\n                const receivedMovies = data.results.map(\n                    ({ id,\n                        title,\n                        name,\n                    }) => {\n                        return {\n                            id,\n                            title,\n                            name,\n                        };\n                    }\n                );\n                console.log(data.results.map(result => result));\n                \n                setMovies(prevMovies => [...prevMovies, ...receivedMovies]);\n            })\n            \n    }, []);\n\n    return (\n        <main>\n            <h1>Trending today</h1>\n            {movies &&\n                <MovieList movies={movies}/>\n            }\n\n        </main>\n    )\n};\n\nexport default Home;","import axios from 'axios';\nconst API_KEY = '6860d409037e6854532ae07af7af1d83';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTradingMovies() {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n        return response.data;\n    } catch(error) {\n    new Error('There is no movie');\n}\n};\n\nexport async function getMoviesByName(query) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n        query,\n    });\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie?${searchParams}`);\n        return response.data;\n    } catch (error) {\n        new Error(`There is no movie with name ${query}`);\n    }\n};\n\nexport async function getMovieById(movieId) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        new Error(`There is no movie`);\n    }\n};\n\nexport async function getCast(movieId) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        new Error(`There is no movie`);\n    }\n}\n\n"],"names":["StyledLink","styled","NavLink","MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","name","useState","setMovies","useEffect","API","then","data","receivedMovies","results","console","log","result","prevMovies","API_KEY","BASE_URL","getTradingMovies","axios","response","Error","getMoviesByName","query","searchParams","URLSearchParams","api_key","language","page","include_adult","getMovieById","movieId","getCast"],"sourceRoot":""}