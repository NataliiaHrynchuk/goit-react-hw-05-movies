{"version":3,"file":"static/js/597.c77cf870.chunk.js","mappings":"4MAoCA,UAhCa,WACT,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACDL,GAGLM,EAAAA,GACaN,GACRO,MAAK,YAAe,IAAZJ,EAAW,EAAXA,KACLC,GAAQ,OAAID,IACZK,QAAQC,IAAIN,EACnB,GACJ,GAAE,CAACH,KAEA,0BACI,wBACKG,EAAKO,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,KAAMC,EAApB,EAAoBA,aAAcC,EAAlC,EAAkCA,GAAlC,OACND,IACA,2BACI,gBAAKE,IAAG,yCAAoCF,GAAgBG,IAAI,WAChE,uBAAIJ,IACHD,IAAa,uCAAeA,OAHxBG,EAFH,OAYzB,C,oLCjCKG,EAAU,mCACVC,EAAW,+BAEV,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6GAEwBC,IAAAA,IAAA,UAAaF,EAAb,qCAAkDD,IAF1E,cAEOI,EAFP,yBAGQA,EAASC,MAHjB,gCAKH,IAAIC,MAAM,qBALP,gFASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,gFACGC,EAAe,IAAIC,gBAAgB,CACrCC,QAASX,EACTY,SAAU,QACVC,KAAM,EACNC,eAAe,EACfN,MAAAA,IAND,kBASwBL,IAAAA,IAAA,UAAaF,EAAb,yBAAsCQ,IAT9D,cASOL,EATP,yBAUQA,EAASC,MAVjB,gCAYC,IAAIC,MAAJ,sCAAyCE,IAZ1C,gFAgBA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA4BhC,GAA5B,gGAEwBoB,IAAAA,IAAA,UAAaF,EAAb,kBAA+BlB,EAA/B,oBAAkDiB,EAAlD,oBAFxB,cAEOI,EAFP,yBAGQA,EAASC,MAHjB,gCAKC,IAAIC,MAAJ,qBALD,gFASA,SAAeU,EAAtB,+CAAO,OAAP,oBAAO,WAAuBjC,GAAvB,gGAEwBoB,IAAAA,IAAA,UAAaF,EAAb,kBAA+BlB,EAA/B,4BAA0DiB,EAA1D,oBAFxB,cAEOI,EAFP,yBAGQA,EAASC,MAHjB,gCAKC,IAAIC,MAAJ,qBALD,gF","sources":["components/Cast.jsx","services/api.js"],"sourcesContent":["import * as API from '../services/api';\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\n\nconst Cast = () => { \n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        if (!movieId) {\n            return;\n        }\n        API\n            .getCast(movieId)\n            .then(({ cast }) => {\n                setCast([...cast]);\n                console.log(cast);\n        })\n    }, [movieId])\n    return (\n        <div>\n            <ul>\n                {cast.map(({ character, name, profile_path, id }) => \n                    profile_path &&\n                    <li key={id}>\n                        <img src={`https://image.tmdb.org/t/p/w200${profile_path}`} alt=\"actor\"></img>\n                        <p>{name}</p>\n                        {character && <p>Character: {character }</p>}\n                    </li>\n                )}\n                \n            </ul>\n        </div>\n    )\n};\n\nexport default Cast;","import axios from 'axios';\nconst API_KEY = '6860d409037e6854532ae07af7af1d83';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport async function getTradingMovies() {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n        return response.data;\n    } catch(error) {\n    new Error('There is no movie');\n}\n};\n\nexport async function getMoviesByName(query) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n        query,\n    });\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie?${searchParams}`);\n        return response.data;\n    } catch (error) {\n        new Error(`There is no movie with name ${query}`);\n    }\n};\n\nexport async function getMovieById(movieId) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        new Error(`There is no movie`);\n    }\n};\n\nexport async function getCast(movieId) {\n    try {\n        const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n        return response.data;\n    } catch (error) {\n        new Error(`There is no movie`);\n    }\n}\n\n"],"names":["movieId","useParams","useState","cast","setCast","useEffect","API","then","console","log","map","character","name","profile_path","id","src","alt","API_KEY","BASE_URL","getTradingMovies","axios","response","data","Error","getMoviesByName","query","searchParams","URLSearchParams","api_key","language","page","include_adult","getMovieById","getCast"],"sourceRoot":""}