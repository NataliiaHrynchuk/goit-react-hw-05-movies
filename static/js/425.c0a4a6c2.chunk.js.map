{"version":3,"file":"static/js/425.c0a4a6c2.chunk.js","mappings":"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","sources":["pages/Home.styled.js","components/MovieList.jsx","components/SearchForm/SearchForm.style.js","components/SearchForm/SearchForm.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n    padding: 8px 16px;\n    border-radius: 4px;\n    /* text-decoration: none; */\n    color: black;\n    font-weight: 500;\n\n    /* &.active {\n    color: #C71585;\n    } */\n\n    :hover {\n        text-decoration: underline;\n    }\n`;","import { StyledLink } from '../pages/Home.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <ul>\n            {movies.map((movie) =>\n                <li key = {movie.id}>\n            <StyledLink to={`/movies/${movie.id}`} state={{from:location}}>\n                {movie.title || movie.name}\n            </StyledLink>\n        </li>)\n}\n                \n        </ul>\n    )\n}","import styled from \"styled-components\";\n\nexport const SearchForm = styled.form`\n    display: flex;\n    margin-left: 10px;\n    align-items: center;\n    width: 100%;\n    max-width: 600px;\n    background-color: #fff;\n    border-radius: 3px;\n    overflow: hidden;\n`;\n\nexport const SearchFormBtn = styled.button`\n    display: inline-block;\n    height: 31px;\n    padding: 4px;\n    opacity: 0.8;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n    border: solid 1px #b7b2b2;\n    color: black;\n    background-color: #c6bacb;\n    :hover, :focus {\n        color: white;\n        background-color:#c71585;\n        border: solid 1px #c71585;\n        opacity: 1;\n    }\n`;\n\nexport const SearchFormInput = styled.input`\n    display: inline-block;\n    width: 100%;\n    height: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: solid 1px #b7b2b2;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n    :focus {\n        border: solid 1px #139cd1;\n    }\n    ::placeholder {\n        font: inherit;\n        font-size: 18px;\n}\n`;","import React from \"react\";\nimport * as SC from './SearchForm.style';\n\nexport default function SearchForm({ onSubmit }) {            \n    const handleSubmit = event => {\n        event.preventDefault();\n        \n        if (!event.currentTarget.elements.query.value) {\n            alert('Enter movies name');\n        return;\n        }\n        onSubmit(event.currentTarget.elements.query.value);\n        event.currentTarget.reset();\n    };\n\n    return (\n        <SC.SearchForm onSubmit={handleSubmit}>\n            <SC.SearchFormInput\n                type=\"text\"\n                name=\"query\"\n                autoFocus\n                utocomplete=\"off\"\n            />\n            <SC.SearchFormBtn type=\"submit\">\n                Search\n            </SC.SearchFormBtn>\n    </SC.SearchForm>\n    )\n};\n","import SearchForm from '../components/SearchForm/SearchForm';\nimport { useEffect, useState } from 'react';\nimport { MovieList } from 'components/MovieList';\nimport { useSearchParams } from 'react-router-dom';\nimport * as API from '../services/api';\n\nconst Movies = () => {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? \"\";\n    console.log(query);\n    \n    const handleFormSubmit = name => { \n        setSearchParams(name !== \"\" ? { query: name } : {});        \n    };\n\n    useEffect(() => {\n        if (!query) {\n            return;\n        }\n        API\n            .getMoviesByName(query)\n            .then((data) => {\n                const receivedMovies = data.results.map(\n                    ({ id,\n                        title,\n                        name,\n                    }) => {\n                        return {\n                            id,\n                            title,\n                            name,\n                        };\n                    }\n                );\n                console.log(receivedMovies);\n                setMovies([...receivedMovies]);\n            })\n    }, [query]);\n    return (\n        <main>\n            <SearchForm onSubmit={handleFormSubmit} />\n            {movies &&\n                <MovieList movies={movies}/>       \n            }\n        </main>\n    )\n};\n\nexport default Movies;\n","import axios from 'axios';\nconst API_KEY = '6860d409037e6854532ae07af7af1d83';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w200';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: '2123fea73978ac77fe6a3f347cf7ced6',\n    include_adult: false,\n};\n\n\n\nexport async function getTradingMovies() {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n        return response.data;\n    } catch(error) {\n    new Error('There is no movie');\n}\n};\n\nexport async function getMoviesByName(query) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n        query,\n    });\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie?${searchParams}`);\n        return response.data;\n    } catch (error) {\n        new Error(`There is no movie with name ${query}`);\n    }\n};\n\nexport async function getMovieById(movieId) {\n    return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n        ({\n            data:{\n                id, \n                poster_path: poster,\n                title,\n                name,\n                release_date: releaseYear,\n                vote_average: userScore,\n                overview,\n                genres,\n            },\n        }) => ({\n            id,\n            poster: IMG_URL + poster,\n            title,\n            name,\n            releaseYear: new Date(releaseYear).getFullYear(),\n            userScore: Math.round(userScore * 10),\n            overview,\n            genres,\n        })\n    )\n    .catch (error => {\n        console.log(error.message);\n    });\n};\n\nexport const getCast = movieId => {\n    return axios\n        .get(`/movie/${movieId}/credits?`)\n        .then(({data: {cast}}) =>\n        cast\n        )\n        .catch (error => {\n            console.log(error.message);\n        })\n};\n\nexport const getReviews = movieId => {\n    return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then (({data: {results}}) => \n    results\n    )   \n    .catch (error => {\n        console.log(error.message);\n    });\n};\n\n\n\n\n"],"names":["StyledLink","styled","NavLink","MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","name","SearchForm","SearchFormBtn","SearchFormInput","onSubmit","event","preventDefault","currentTarget","elements","query","value","reset","alert","type","autoFocus","utocomplete","useState","setMovies","useSearchParams","searchParams","setSearchParams","get","console","log","useEffect","API","then","data","receivedMovies","results","API_KEY","BASE_URL","IMG_URL","getTradingMovies","axios","response","Error","getMoviesByName","URLSearchParams","api_key","language","page","include_adult","getMovieById","movieId","poster","poster_path","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","catch","error","message","getCast","cast","getReviews"],"sourceRoot":""}