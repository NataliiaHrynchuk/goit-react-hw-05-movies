{"version":3,"file":"static/js/375.8e5de5c1.chunk.js","mappings":"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","sources":["components/BackLink/BackLink.styled.js","components/BackLink/BackLink.jsx","pages/MovieDetails.styled.js","pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const BackLink = styled(Link)`\nmargin-left: 12px;\npadding: 4px;\ndisplay: inline-flex;\nalign-items: center;\ngap: 4px;\ntext-decoration: none;\nborder: 1px solid black;\nborder-radius: 4px;\ncolor: black;\nbackground-color: #c6bacb;\n\n:hover, :focus {\n    color: white;\n    background-color:#c71585;\n}\n`;","import { AiOutlineArrowLeft } from 'react-icons/ai';\nimport * as SC from './BackLink.styled';\n\nexport const BackLink = ({to, children}) => {\n    \n    return (\n        <SC.BackLink  to={to} >\n            <AiOutlineArrowLeft />\n            {children}\n        </SC.BackLink>\n    );\n};","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Box = styled.div`\n    display: flex;\n    gap: 12px;\n    padding: 12px;\n    border-bottom: solid 1px grey;\n    box-shadow: 0px 3px 3px -3px rgba(0,0,0,0.55);\n`;\n\nexport const Wrap = styled.div`\n    border-bottom: gray;\n    padding: 12px;\n    border-bottom: solid 1px grey;\n    box-shadow: 0px 3px 3px -3px rgba(0,0,0,0.55);\n`;\n\nexport const Link = styled(NavLink)`\n    padding: 8px 16px;\n    border-radius: 4px;\n    text-decoration: none;\n    color: black;\n    font-weight: 500;\n\n    &.active {\n    color: #C71585;\n    }\n\n    :hover {\n        text-decoration: underline;\n    }\n`;\n\nexport const DetailsList = styled.ul`\ndisplay: flex;\nflex-direction: column; \ngap: 20px;\n`;\n","import { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from 'react';\nimport { BackLink } from '../components/BackLink/BackLink';\nimport { Suspense } from 'react';\nimport * as API from '../services/api';\nimport * as SC from './MovieDetails.styled';\n\nconst Status = {\n    IDLE: 'idle',\n    RESOLVED: 'resolved',\n    REJECTED: 'rejected',\n}\nexport default function MovieDetails() { \n    const { movieId } = useParams();\n    const [movie, setMovie] = useState('');\n    const [status, setStatus] = useState('idle');\n    const [error, setError] = useState(null);\n    const location = useLocation();\n    const backLinkHref = location?.state?.from ?? \"/movies\";\n    \n\n    useEffect(() => {\n        if (!movieId) {\n            return;\n        }\n        API\n            .getMovieById(movieId)\n            .then((data) => {\n                console.log(data);\n                setMovie(data);\n                setStatus(Status.RESOLVED);\n            })\n            .catch(error => {\n                setError(error);\n                setStatus(Status.REJECTED);\n        })\n    }, [movieId]);\n    \n    return (\n        <div>\n            {status === Status.REJECTED && <p>{error.message}</p>}\n        {movie &&\n                <>\n                <BackLink to={backLinkHref }>Go back</BackLink>\n                    <SC.Box>\n                        {movie.poster_path ? (\n                        <img src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n                            alt='movie cover' />\n                        ) : (\n                            <img src = 'https://i.ibb.co/BrYLsTv/default-movie-poster-min.jpg'\n                            alt='movie cover' width=\"200px\" />    \n                        )}\n                    \n                        <div>\n                            <h2>{movie.title || movie.name}</h2>\n                            <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n                            <h3>Overview</h3>\n                            <p>{movie.overview}</p>\n                            <h4>Genres</h4>\n                            <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n                        </div>\n                    </SC.Box>\n                    <SC.Wrap>\n                        <p>Additional information</p>\n                        <SC.DetailsList>\n                            <li>\n                                <SC.Link to=\"cast\" state={{from: location}}>Cast</SC.Link>\n                            </li>\n                            <li>\n                                <SC.Link to=\"reviews\" state={{from: location}}>Reviews</SC.Link>\n                            </li>\n                        </SC.DetailsList>\n                        <Suspense fallback={<div>Loading...</div>}>\n                            <Outlet/>\n                        </Suspense>\n                    </SC.Wrap>\n                </>\n        }\n    </div>\n    )\n};\n","import axios from 'axios';\nconst API_KEY = '6860d409037e6854532ae07af7af1d83';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: '2123fea73978ac77fe6a3f347cf7ced6',\n    include_adult: false,\n};\nconst IMG_URL = 'https://image.tmdb.org/t/p/w200';\nconst defaultImg = 'http://placehold.it/100x200'\n\nexport async function getTradingMovies() {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n        return response.data;\n    } catch(error) {\n    new Error('There is no movie');\n}\n};\n\nexport async function getMoviesByName(query) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n        query,\n    });\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie?${searchParams}`);\n        return response.data;\n    } catch (error) {\n        new Error(`There is no movie with name ${query}`);\n    }\n};\n\nexport async function getMovieById(movieId) {\n    return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n        ({\n            data:{\n                id, \n                poster_path: poster,\n                title,\n                name,\n                release_date: releaseYear,\n                vote_average: userScore,\n                overview,\n                genres,\n            },\n        }) => ({\n            id,\n            poster: IMG_URL + poster,\n            title,\n            name,\n            releaseYear: new Date(releaseYear).getFullYear(),\n            userScore: Math.round(userScore * 10),\n            overview,\n            genres,\n        })\n    )\n    .catch (error => {\n        console.log(error.message);\n    });\n};\n\nexport const getCast = movieId => {\n    return axios\n        .get(`/movie/${movieId}/credits?`)\n        .then(({data: {cast}}) =>\n        cast.map(({ id, name, character, profile_path: photo}) => ({\n            id,\n            name, \n            character,\n            photo: photo ? IMG_URL + photo : defaultImg,\n        }))\n        )\n        .catch (error => {\n            console.log(error.message);\n        })\n};\n\nexport const getReviews = movieId => {\n    return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then (({data: {results}}) => \n    results.map(({id, author, content}) => ({\n        id,\n        author, \n        content,\n    }))\n    )   \n    .catch (error => {\n        console.log(error.message);\n    });\n};\n\n\n\n"],"names":["BackLink","styled","Link","to","children","Box","Wrap","NavLink","DetailsList","Status","MovieDetails","movieId","useParams","useState","movie","setMovie","status","setStatus","error","setError","location","useLocation","backLinkHref","state","from","useEffect","API","then","data","console","log","catch","message","poster_path","src","alt","width","title","name","Math","round","vote_average","overview","genres","map","genre","join","Suspense","fallback","API_KEY","BASE_URL","axios","api_key","include_adult","IMG_URL","getTradingMovies","response","Error","getMoviesByName","query","searchParams","URLSearchParams","language","page","getMovieById","id","poster","releaseYear","release_date","userScore","Date","getFullYear","getCast","cast","character","photo","profile_path","getReviews","results","author","content"],"sourceRoot":""}