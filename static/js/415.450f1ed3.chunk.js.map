{"version":3,"file":"static/js/415.450f1ed3.chunk.js","mappings":"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","sources":["pages/Home.styled.js","components/MovieList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const StyledLink = styled(NavLink)`\n    padding: 8px 16px;\n    border-radius: 4px;\n    /* text-decoration: none; */\n    color: black;\n    font-weight: 500;\n\n    /* &.active {\n    color: #C71585;\n    } */\n\n    :hover {\n        text-decoration: underline;\n    }\n`;","import { StyledLink } from '../pages/Home.styled';\nimport { useLocation } from 'react-router-dom';\n\nexport const MovieList = ({ movies }) => {\n    const location = useLocation();\n    return (\n        <ul>\n            {movies.map((movie) =>\n                <li key = {movie.id}>\n            <StyledLink to={`/movies/${movie.id}`} state={{from:location}}>\n                {movie.title || movie.name}\n            </StyledLink>\n        </li>)\n}\n                \n        </ul>\n    )\n}","import React, { useState, useEffect } from 'react';\nimport { MovieList } from 'components/MovieList';\nimport * as API from 'services/api';\n\n\nconst Home = () => {\n    const [movies, setMovies] = useState([]);\n    \n    useEffect(() => {\n        API\n            .getTradingMovies()\n            .then((data) => {\n                const receivedMovies = data.results.map(\n                    ({ id,\n                        title,\n                        name,\n                    }) => {\n                        return {\n                            id,\n                            title,\n                            name,\n                        };\n                    }\n                );\n                console.log(data.results.map(result => result));\n                \n                setMovies(prevMovies => [...prevMovies, ...receivedMovies]);\n            })\n            \n    }, []);\n\n    return (\n        <main>\n            <h1>Trending today</h1>\n            {movies &&\n                <MovieList movies={movies}/>\n            }\n\n        </main>\n    )\n};\n\nexport default Home;","import axios from 'axios';\nconst API_KEY = '6860d409037e6854532ae07af7af1d83';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: '2123fea73978ac77fe6a3f347cf7ced6',\n    include_adult: false,\n};\nconst IMG_URL = 'https://image.tmdb.org/t/p/w200';\nconst defaultImg = 'http://placehold.it/100x200'\n\nexport async function getTradingMovies() {\n    try {\n        const response = await axios.get(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n        return response.data;\n    } catch(error) {\n    new Error('There is no movie');\n}\n};\n\nexport async function getMoviesByName(query) {\n    const searchParams = new URLSearchParams({\n        api_key: API_KEY,\n        language: 'en-US',\n        page: 1,\n        include_adult: false,\n        query,\n    });\n    try {\n        const response = await axios.get(`${BASE_URL}/search/movie?${searchParams}`);\n        return response.data;\n    } catch (error) {\n        new Error(`There is no movie with name ${query}`);\n    }\n};\n\nexport async function getMovieById(movieId) {\n    return axios\n    .get(`/movie/${movieId}?`)\n    .then(\n        ({\n            data:{\n                id, \n                poster_path: poster,\n                title,\n                name,\n                release_date: releaseYear,\n                vote_average: userScore,\n                overview,\n                genres,\n            },\n        }) => ({\n            id,\n            poster: IMG_URL + poster,\n            title,\n            name,\n            releaseYear: new Date(releaseYear).getFullYear(),\n            userScore: Math.round(userScore * 10),\n            overview,\n            genres,\n        })\n    )\n    .catch (error => {\n        console.log(error.message);\n    });\n};\n\nexport const getCast = movieId => {\n    return axios\n        .get(`/movie/${movieId}/credits?`)\n        .then(({data: {cast}}) =>\n        cast.map(({ id, name, character, profile_path: photo}) => ({\n            id,\n            name, \n            character,\n            photo: photo ? IMG_URL + photo : defaultImg,\n        }))\n        )\n        .catch (error => {\n            console.log(error.message);\n        })\n};\n\nexport const getReviews = movieId => {\n    return axios\n    .get(`/movie/${movieId}/reviews?`)\n    .then (({data: {results}}) => \n    results.map(({id, author, content}) => ({\n        id,\n        author, \n        content,\n    }))\n    )   \n    .catch (error => {\n        console.log(error.message);\n    });\n};\n\n\n\n"],"names":["StyledLink","styled","NavLink","MovieList","movies","location","useLocation","map","movie","to","id","state","from","title","name","useState","setMovies","useEffect","API","then","data","receivedMovies","results","console","log","result","prevMovies","API_KEY","BASE_URL","axios","api_key","include_adult","IMG_URL","getTradingMovies","response","Error","getMoviesByName","query","searchParams","URLSearchParams","language","page","getMovieById","movieId","poster","poster_path","releaseYear","release_date","userScore","vote_average","overview","genres","Date","getFullYear","Math","round","catch","error","message","getCast","cast","character","photo","profile_path","getReviews","author","content"],"sourceRoot":""}