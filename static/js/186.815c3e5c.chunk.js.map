{"version":3,"file":"static/js/186.815c3e5c.chunk.js","mappings":"gMAqCA,UAjCgB,WACZ,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GACgBN,GACXO,MAAK,SAAAC,GAAO,OACTJ,EAAWI,EAAQC,KAAI,kBAA4B,CAC3CC,GADe,EAAEA,GAEjBC,OAFe,EAAMA,OAGrBC,QAHe,EAAcA,QAAd,IADd,GAMpB,GAAE,CAACZ,KAGA,yBACKG,EAAQU,OAAS,GACd,wBACCV,EAAQM,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,QAAd,OACT,2BACI,wBAAKD,KACL,uBAAIC,MAFCF,EADA,OAQb,qEAIf,C,+KCjCDI,IAAAA,SAAAA,QAAyB,+BACzBA,IAAAA,SAAAA,OAAwB,CACpBC,QAAS,mCACTC,eAAe,GAGZ,IAAMC,EAAmB,WAC5B,IACI,OAAOH,IAAAA,IAAA,sBAENP,MAAK,qBAAEW,KAAOV,OAAT,GAKT,CAHC,MAAOW,GAEL,OADAC,QAAQC,IAAI,QAAS,CAACF,MAAAA,IACf,IACV,CACJ,EAEYG,EAAkB,SAAAC,GAC3B,IACI,OAAOT,IAAAA,IAAA,8BACqBS,IAC3BhB,MAAK,qBAAEW,KAAOV,OAAT,GAKT,CAHC,MAAOW,GAEL,OADAC,QAAQC,IAAI,QAAS,CAACF,MAAAA,IACf,IACV,CACJ,EAEYK,EAAe,SAAAxB,GACxB,IACI,OAAOc,IAAAA,IAAA,iBACQd,EADR,MAENO,MAAK,qBAAEW,IAAF,GAIT,CAHC,MAAOC,GAEL,OADAC,QAAQC,IAAI,QAAS,CAACF,MAAAA,IACf,IACV,CACJ,EAGYM,EAAU,SAAAzB,GACnB,IACI,OAAOc,IAAAA,IAAA,iBACQd,EADR,cAENO,MAAK,qBAAEW,KAAOQ,IAAT,GAGL,CAFH,MAAOP,GACDC,QAAQC,IAAI,QAAS,CAACF,MAAAA,GACzB,CACR,EAEYQ,EAAa,SAAA3B,GACtB,IACI,OAAOc,IAAAA,IAAA,iBACQd,EADR,cAENO,MAAM,qBAAEW,KAAOV,OAAT,GAGV,CAFC,MAAOW,GACLC,QAAQC,IAAI,QAAS,CAACF,MAAAA,GACzB,CACJ,C","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import * as API from '../../services/api';\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from 'react';\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        API\n            .getReviews(movieId)\n            .then(results => \n                setReviews(results.map(({id, author, content}) => ({\n                        id,\n                        author, \n                        content,\n                    })))); \n    }, [movieId]);\n\n    return (\n        <div>\n            {reviews.length > 0 ? (\n                <ul>\n                {reviews.map(({id, author, content}) => (\n                    <li key={id}>\n                        <h3>{author}</h3>\n                        <p>{content}</p>\n                    </li>\n                ))}\n                </ul>\n            ) : (\n                <p>We don`t have any reviews for this movie</p>\n            )}\n        </div>\n    )\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n    api_key: '6860d409037e6854532ae07af7af1d83',\n    include_adult: false,\n};\n\nexport const getTradingMovies = () => {\n    try {\n        return axios\n        .get(`/trending/all/day?`)\n        .then(({data: {results}}) => \n        results)\n    } catch (error) {\n        console.log('error', {error});\n        return null;\n    };\n};\n\nexport const getMoviesByName = query => {\n    try{\n        return axios\n        .get(`/search/movie?query=${query}`)\n        .then(({data: {results}}) => \n        results)\n    } catch (error) {\n        console.log('error', {error});\n        return null;\n    };\n};\n\nexport const getMovieById = movieId => {\n    try {\n        return axios\n        .get(`/movie/${movieId}?`)\n        .then(({data}) => data)\n    } catch (error) {\n        console.log('error', {error});\n        return null;\n    };\n};\n\n\nexport const getCast = movieId => {\n    try {\n        return axios\n        .get(`/movie/${movieId}/credits?`)\n        .then(({data: {cast}}) => cast)\n    } catch (error) {\n            console.log('error', {error});\n        }\n};\n\nexport const getReviews = movieId => {\n    try {\n        return axios\n        .get(`/movie/${movieId}/reviews?`)\n        .then (({data: {results}}) => results)\n    } catch (error) {\n        console.log('error', {error});\n    };\n};\n\n\n\n\n"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","API","then","results","map","id","author","content","length","axios","api_key","include_adult","getTradingMovies","data","error","console","log","getMoviesByName","query","getMovieById","getCast","cast","getReviews"],"sourceRoot":""}